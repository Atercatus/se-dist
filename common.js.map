{"version":3,"sources":["webpack:///./src/app/shared/http/admin.service.ts","webpack:///./src/app/shared/http/punish.service.ts","webpack:///./src/app/shared/http/report.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GlobalService } from '../service/global.service';\r\n\r\n@Injectable()\r\nexport class AdminService {\r\n\r\n    constructor (private http: HttpClient, private global: GlobalService) {\r\n    }\r\n\r\n    public getAdminList (): Observable<any> {\r\n        return this.http.get(this.global.url + `/admin`).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result;\r\n            } else {\r\n                alert('[ERROR]: ' + res.err);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getAdminByCredit (credit: string): Observable<any> {\r\n        return this.http.get(this.global.url + `/admin/${credit}`).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result;\r\n            } else {\r\n                alert('[ERROR]: ' + res.err);\r\n            }\r\n        });\r\n    }\r\n\r\n    public postAdmin (data: any): Observable<any> {\r\n        return this.http.post(this.global.url + `/post-admin`, data).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result;\r\n            } else {\r\n                alert('[ERROR]: ' + res.err);\r\n            }\r\n        });\r\n    }\r\n\r\n    public deleteAdmin (id: number): Observable<any> {\r\n        let data = {\r\n            id: id\r\n        };\r\n        return this.http.put(this.global.url + `/delete-admin`, data).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result\r\n            } else {\r\n                alert('[ERROR]: ' + res.err);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GlobalService } from '../service/global.service';\r\n\r\n@Injectable()\r\nexport class PunishService {\r\n\r\n    constructor (private http: HttpClient, private global: GlobalService, private location: Location) {\r\n    }\r\n\r\n    public getPunishList (): Observable<any> {\r\n        return this.http.get(this.global.url + `/sanction`).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result;\r\n            } else {\r\n                alert('[ERROR]: ' + res.result);\r\n            }\r\n        });\r\n    }\r\n\r\n    public postPunish (data: any): Observable<any> {\r\n        return this.http.put(this.global.url + `/post-sanction`, data).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result;\r\n            } else {\r\n                alert('[ERROR]: ' + res.result);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GlobalService } from '../service/global.service';\r\n\r\n@Injectable()\r\nexport class ReportService {\r\n\r\n    constructor (private http: HttpClient, private global: GlobalService) {\r\n    }\r\n\r\n    public postReport (data: FormData): Observable<any> {\r\n        return this.http.post(this.global.url + `/report`, data).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result;\r\n            } else {\r\n                alert('[ERROR]: ' + res.result);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getReportList (): Observable<any> {\r\n        return this.http.get(this.global.url + `/report`).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result;\r\n            } else {\r\n                alert('[ERROR]: ' + res.result);\r\n            }\r\n        })\r\n    }\r\n\r\n    public getReportById (id: number): Observable<any> {\r\n        return this.http.get(this.global.url + `/report/${id}`).map((res: any) => {\r\n            if ( res.status === 'success' ) {\r\n                return res.result;\r\n            } else {\r\n                alert('[ERROR]: ' + res.result);\r\n            }\r\n        })\r\n    }\r\n}\r\n"],"sourceRoot":""}